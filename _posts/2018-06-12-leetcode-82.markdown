---
layout: post
title:  "82. Remove Duplicates from Sorted List II"
date:   2018-06-12 10:00:00
categories: leetcode
---


## Problem Information

> * Link: [Remove Duplicates from Sorted List II](https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/description/)
> * Source: LeetCode
> * Difficulty: Medium
> * Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.



```
Input: 1->2->3->3->4->4->5
Output: 1->2->5

Input: 1->1->1->2->3
Output: 2->3
```

## Solution
* Dummy node to avoid head deletion
* Skip nodes until n.val != n.next.val. Then check again from n.next.
* After two check loops, appends the current node to the final results

## Complexity Analysis
Time complexity: O(N). Space complexity: O(1).

## Edge Case
1. The head node will be removed
2. None type check
3. Empty input

## AC Code

``` python
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if head is None:
            return head
        
        dummpy = ListNode(0)
        dummpy.next = head
        cur = dummpy
        while cur is not None and cur.next is not None and cur.next.next is not None:
            n = cur.next
            flag = False
            while n is not None and n.next is not None and n.val == n.next.val:
                while n is not None and n.next is not None and n.val == n.next.val:
                    flag = True
                    n = n.next
                if flag:
                    n = n.next
            cur.next = n
            cur = cur.next
        return dummpy.next
```



[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/

