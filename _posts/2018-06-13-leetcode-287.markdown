---
layout: post
title:  "287. Find the Duplicate Number"
date:   2018-06-13 23:00:00
categories: leetcode
---


## Problem Information

> * Link: [Find the Duplicate Number](https://leetcode.com/problems/find-the-duplicate-number/description/)
> * Source: LeetCode
> * Difficulty: Medium
> * Description:

```
Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.

Example:

Input: [1,3,4,2,2]
Output: 2

Input: [3,1,3,4,2]
Output: 3
```

Note:

* You must not modify the array (assume the array is read only).
* You must use only constant, O(1) extra space.
* Your runtime complexity should be less than O(n2).
* There is only one duplicate number in the array, but it could be repeated more than once.

## Solution
* Sort the list, store the previous number and compare each number with its previous one. If it equals to the previous one, it is the duplicate one


## Complexity Analysis
Time complexity: O(N log N). Space complexity: O(1).

## Edge Case
Haven't thought of other edge cases.

## AC Code

``` python
class Solution:
    def findDuplicate(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        if not nums:
            return 0
        
        nums.sort()
        
        tmp = nums[0]
        
        for i in range(1, len(nums)):
            if nums[i] == tmp:
                return tmp
            else:
                tmp = nums[i]
        return tmp
            
```



[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/