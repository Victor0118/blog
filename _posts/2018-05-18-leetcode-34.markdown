---
layout: post
title:  "34. Search for a Range 解题报告"
date:   2018-05-18 10:00:00
categories: leetcode
---


## 题目信息

> * 链接：[Search for a Range](https://leetcode.com/problems/search-for-a-range/description/)
> * 来源：LeetCode
> * 难度：Medium
> * 描述：查找一个不严格递增的数组，存在返回下标区间，不存在返回[-1, -1]

## 解题思路
1. 二分法，先查start，再查end
2. 查start的时候保证left一定不等于target，查end的时候保证right一定不等于target，分析清楚这个了有利于二分末枝判断

## 复杂度分析
时间复杂度O(logN)，空间复杂度O(1)

## 细节处理
1. 空数组
2. 二分末枝的情况
3. 在两端的值等于目标值的情况

## 心得体会
最近两天都写二分的代码，感觉很有意思，个人比较喜欢这种风格，以前是自己的弱项，以后还要勤加练习

## AC代码

``` python
class Solution:
    def searchRange(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        start = -1
        end = -1
        a = 0
        b = len(nums) - 1
        if len(nums) == 0:
            return [-1, -1]
        if nums[a] == target:
            start = 0
        if nums[b] == target:
            end = b
        if start != -1 and end != -1:
            return [start, end]
        if start == -1:
            while a < b:
                mid = int((a + b) / 2)
                if b - a < 2:
                    if nums[b] == target:
                        start = b
                    break
                if nums[mid] >= target:
                    b = mid
                else:
                    a = mid
        if end == -1 and start != -1:
            a = 0
            b = len(nums) - 1
            while a < b:
                mid = int((a + b) / 2)
                if b - a < 2:
                    if nums[a] == target:
                        end = a
                    break
                if nums[mid] <= target:
                    a = mid
                else:
                    b = mid
        return [start, end]

```



[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/

